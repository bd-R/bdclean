on:
  workflow_dispatch:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

  # for now, CRON jobs only run on the default branch of the repo (i.e. usually on master)
  schedule:
    # * is a special character in YAML so you have to quote this string
    # Here it will run after every 8 hours starting from 0th hour of the day
    - cron: "0 0/12 * * *"

name: Mac-Dev-Dev

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest, r: 'release'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          Rscript -e 'install.packages("remotes")'
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'cat(remotes::system_requirements("ubuntu", "20.04"), sep = "\n")')

      - name: Query R packages
        env:
          GITHUB_PAT: ${{ secrets.SYNCWORKFLOW }}
        run: |
          install.packages('devtools', dependencies = c('Depends', 'Imports'))
          saveRDS(devtools::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
          install.packages('remotes')
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install R packages
        env:
          GITHUB_PAT: ${{ secrets.SYNCWORKFLOW }}
        run: |
          remotes::install_deps(dependencies = TRUE)
          # Your "dev" dependencies go here
          remotes::install_github(c('bd-R/bdutilities@dev',
                                    'bd-R/bdDwC@dev',
                                    'bd-R/bdutilities.app@dev',
                                    'bd-R/bddwc.app@dev',
                                    'bd-R/bdchecks@dev',
                                    'bd-R/bdchecks.app@dev',
                                    'bd-R/bdclean@dev',
                                    'bd-R/bdverse@dev',
                                    'bd-R/bdtests@dev'),
                                    depenedencies = FALSE,
                                    upgrade = 'never')
          # End "dev" here
          remotes::install_cran("rcmdcheck")
          remotes::install_cran("testthat")
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run:  |
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
          testthat::test_local()
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
